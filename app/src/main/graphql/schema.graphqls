type Query {
    products(first: Int!,query: String): ProductConnection
    customer(id: ID!): Customer
}

# Connection type for pagination
type ProductConnection {
    edges: [ProductEdge]
}

# Edge type for pagination
type ProductEdge {
    node: Product
}

# Define the Product type
type Product {
    id: ID!
    title: String!
    description: String
    handle: String
    images(first: Int!): ImageConnection
    variants(first: Int!): VariantConnection
}

# Connection type for images
type ImageConnection {
    edges: [ImageEdge]
}

# Edge type for images
type ImageEdge {
    node: Image
}

# Define the Image type
type Image {
    src: String!
}

# Connection type for variants
type VariantConnection {
    edges: [VariantEdge]
}

# Edge type for variants
type VariantEdge {
    node: Variant
}

# Define the Variant type
type Variant {
    price: String!
    sku: String
}
# Define the Customer type
type Mutation {
    customerCreate(input: CustomerInput!): CustomerCreatePayload
}

input CustomerInput {
    email: String!
    firstName: String!
    lastName: String!
    phone: String
    tags: [String!]
}

type CustomerCreatePayload {
    customer: Customer
    userErrors: [UserError!]!
}
type Customer {
    id: ID!
    email: String!
    firstName: String
    lastName: String
    phone: String
    address: String
    createdAt: String
    updatedAt: String
    displayName: String
    preferredContactMethod: String
    marketingOptIn: Boolean
}
type UserError {
    field: [String]
    message: String!
}





